二值化后：求面积，面积转换
import java.util.*;

public class singleBlock {

    int id;
    Vector<point> blockpoints = new Vector<point>();
    public singleBlock(int type, int index, boolean ud){
        switch (type) {
            case
                switch (index) {
                    case 0: case 1:
                        blockpoints.add(new point(0, 45, 14, 10));
                        blockpoints.add(new point(225, 315, 10, 10));
                        blockpoints.add(new point(135, 180, 10, 14));
                        break;
                    case 2:
                        blockpoints.add(new point(0, 45, 10, 7));
                        blockpoints.add(new point(225, 315, 7, 7));
                        blockpoints.add(new point(135, 180, 7, 10));
                        break;
                    case 3:
                        blockpoints.add(new point(0, 90, 5, 5));
                        blockpoints.add(new point(270, 0, 5, 5));
                        blockpoints.add(new point(180, 270, 5, 5));
                        blockpoints.add(new point(90, 180, 5, 5));
                        break;
                    case 4:
                        if(ud){
                            blockpoints.add(new point(0, 45, 5, 7));
                            blockpoints.add(new point(225, 0, 7, 5));
                            blockpoints.add(new point(180, 225, 5, 7));
                            blockpoints.add(new point(45, 180, 7, 5));
                        }
                        else{
                            blockpoints.add(new point(0, 45, 7, 5));
                            blockpoints.add(new point(225, 0, 5, 7));
                            blockpoints.add(new point(180, 225, 7, 5));
                            blockpoints.add(new point(45, 180, 5, 7));
                        }
                        break;
                    case 5: case 6:
                        blockpoints.add(new point(0, 45, 7, 5));
                        blockpoints.add(new point(225, 315, 5, 5));
                        blockpoints.add(new point(135, 180, 5, 7));
                        break;
                    default:
                        break;
                }
                break;
        
            default:
                break;
        }
    }
}